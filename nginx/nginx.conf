# 동시에 처리 할 수있는 최대 연결 수를 설정
events {
    worker_connections  1024;
}

http{
    upstream frontend {
        server i-eum-u.com:3000;
    }
    # upstream 변수를 설정해준다. upstream 변수는 server 설정에서 NGINX가 받아들인 요청을 어떤 서버로 흘려보내 줄 것인지 결정할 때 사용된다.
    upstream backend1 {
        server i-eum-u.com:8080;
    }

    server {
        # 80 포트로 들어오는 HTTP 요청을 처리하는 설정
        listen 80;
        # 해당 서버 블록의 이름을 설정합니다. 
        server_name i-eum-u.com;
        server_tokens off;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        
        }
    }

    server {
        listen 443 ssl;
        server_name i-eum-u.com;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/i-eum-u.com/fullchain.pem; # example.org를 도메인으로 변경
        ssl_certificate_key /etc/letsencrypt/live/i-eum-u.com/privkey.pem; # example.or를 도메인으로 변경
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # 프론트앤드
        location / {
            # 서버에서 요청을 처리할 때 요청이 수신된 호스트 이름을 알기 위해 사용됩니다.
            proxy_pass http://frontend/;
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        # 백앤드
        location /api/v1/ {
            # 서버에서 요청을 처리할 때 요청이 수신된 호스트 이름을 알기 위해 사용됩니다.
            proxy_pass http://backend1/;
            add_header 'Access-Control-Allow-Origin' '*';
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }
    }
}
